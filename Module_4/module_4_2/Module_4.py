# Модули и пакеты
# import Module_4_import as m_4_1 # Присваиваем имя m_4_1
#
# print('Привет это модуль_4')
# m_4_1.say_hi()
# from Module_4.module_4_2.Module_4_import import say_hi
# при импорте модулей интерпретатор сначала выполняет все
# действия из импортируемого модуля
# Если необходимо, чтобы действия из импортируемого модуля не выполнялись,
# необходимо добавить в импортируемый модуль следующую конструкцию
#
# if __name__ == '__main__':
#     main()
#     say_hi()
# то есть включить вызов функций в проверку условия
#
# import Module_4_import
# # Для вызова функции, необходимо будет указать ее явно
# Module_4_import.say_hi()
# Module_4_import.main()
#
# # или
#
# from Module_4_import import say_hi, main
# say_hi()
# main()
#
# # Можно присвоить псевдоним импортируемой функции
# from Module_4_import import say_hi as sh
# sh()

# Скомпилированные» файлы в Python

from dis import dis
from Module_4_import import say_hi as sh

# Библиотека dis показывает bytecode
# в файлах с расширением *.pyc которые находятся в папке __pycache__ хранится этот bytecode
dis(sh)

# Пакеты и модули
# Пакет — это директория.
# Единственным отличием пакета от обычной папки является наличие внутри файла "__init__.py"

import modules
# все отличия между папкой и пакетом заключаются в том, что
# код из файла "__init__.py" выполняется при импорте пакета,
# даже если доступа к его содержимому не будет, когда мы просто импортируем модуль
